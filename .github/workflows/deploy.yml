name: Test and Deploy to EC2

on:
  push:
    branches: feat/101/chaeeun

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'  # Eclipse Temurin 배포판 사용
          java-version: '17'       # Java 버전 (프로젝트에 맞게 조정)
          cache: gradle            # Gradle 캐싱 활성화

      - name: Run tests
        run: ./gradlew test

#      - name: Generate test report
#        if: always()               # 테스트 실패해도 리포트 생성
#        run: ./gradlew jacocoTestReport

#      - name: Upload test results
#        if: always()
#        uses: actions/upload-artifact@v3
#        with:
#          name: test-results
#          path: build/reports/tests/

  deploy:
    needs: test                    # test 작업이 성공한 후에만 실행
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Deploy to EC2 via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            cd ~/WEB4_5_AnjolinaJelly_BE

            git stash
            git pull origin main
            git stash pop

            cd ~
            sudo systemctl stop nginx || true
            docker-compose -f docker-compose.nginx.yaml up -d

            cd ~/WEB4_5_AnjolinaJelly_BE
            docker-compose -f docker-compose.dev.yaml up -d
            
            # 실행 중인 스프링 앱 PID 찾아서 종료 (프로세스가 없는 경우 에러 방지)
            ps aux | grep 'zzirit-0.0.1-SNAPSHOT.jar' | grep -v grep | awk '{print $2}' | xargs -r kill -9
            
            ./gradlew build -x test
            mv ./build/libs/zzirit-0.0.1-SNAPSHOT.jar ./src/main/resources/
            
            cd ./src/main/resources
            # java -jar zzirit-0.0.1-SNAPSHOT.jar
            nohup java -jar zzirit-0.0.1-SNAPSHOT.jar > ../../../../log.txt 2>&1 &
